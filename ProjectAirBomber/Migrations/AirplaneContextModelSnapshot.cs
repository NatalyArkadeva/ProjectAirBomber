// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectAirBomber.Database;

#nullable disable

namespace ProjectAirBomber.Migrations
{
    [DbContext(typeof(AirplaneContext))]
    partial class AirplaneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectAirBomber.CollectionGenericObjects.CollectionInfo", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("CollectionType")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("ProjectAirBomber.Entity.EntityAirplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CollectionInfoName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<int>("Speed")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CollectionInfoName");

                    b.ToTable("Airplanes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("EntityAirplane");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProjectAirBomber.Entity.EntityAirBomber", b =>
                {
                    b.HasBaseType("ProjectAirBomber.Entity.EntityAirplane");

                    b.Property<string>("AdditionalColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AirRefueling")
                        .HasColumnType("boolean");

                    b.Property<bool>("AircraftBomb")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExtraFuelTank")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("EntityAirBomber");
                });

            modelBuilder.Entity("ProjectAirBomber.Entity.EntityAirplane", b =>
                {
                    b.HasOne("ProjectAirBomber.CollectionGenericObjects.CollectionInfo", "Collection")
                        .WithMany("Airplanes")
                        .HasForeignKey("CollectionInfoName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("ProjectAirBomber.CollectionGenericObjects.CollectionInfo", b =>
                {
                    b.Navigation("Airplanes");
                });
#pragma warning restore 612, 618
        }
    }
}
